@{
    ViewBag.Title = "Sonar Warnings";
}

<link href="~/Content/Bootstrap_v4.1.css" rel="stylesheet" />
<link href="~/Content/dataTables.bootstrap4.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery.dataTables.min.js"></script>
<script src="~/Scripts/dataTables.bootstrap4.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/bootstrap_4.4.1.min.css" rel="stylesheet" />

<style type="text/css">
    label.form-check-label {
        padding-left: 14px;
    }

    input#chknew {
        margin-top: 4px;
        margin-left: -2px;
    }

    #SonarWarningsGrid {
        width: 1100px;
    }

    div#loader {
        width: 5rem;
        height: 5rem;
    }

    input, select, textarea {
        max-width: initial;
    }

    .form-control {
        font-size: inherit;
        height: calc(3.5rem + 1px);
    }

    .navbar-collapse.collapse {
        color: #333333;
    }

    ul.nav.navbar-nav {
        display: block;
    }

    .navbar > .container, .navbar > .container-fluid {
        display: block;
    }

    body {
        padding-top: 0px;
        font-size: 14px;
    }

    .navbar.navbar-inverse.navbar-fixed-top {
        padding: 0px;
        color: #333333;
    }

    td {
        font-size: 10pt !important;
    }

    tr {
        font-size: 10pt !important;
    }

    .dataTables_scrollHead {
        padding-left: 17px;
    }

    .dataTables_scrollBody {
        padding-left: 17px;
    }

    div#divAssignedProjects {
        padding-left: 30px;
    }

    div#footer {
        padding-left: 17px;
    }

    .icons-excel {
        background: url(../Images/export-report.png) no-repeat;
        border: none;
        padding: 0px 0px 8px 30px;
        height: 25px;
        vertical-align: middle;
    }

    table.fixedHeader-floating {
        position: fixed !important;
        background-color: white
    }

        table.fixedHeader-floating.no-footer {
            border-bottom-width: 0
        }

    table.fixedHeader-locked {
        position: absolute !important;
        background-color: white
    }

    .spinner, .spinner:after, .spinner:before {
        display: inline-block;
        box-sizing: border-box;
        border-color: #4b9fd5 transparent transparent;
        animation-duration: 1.2s;
    }

    .spinner, .spinner-placeholder {
        position: relative;
        vertical-align: middle;
        width: 16px;
        height: 16px;
    }

    .spinner {
        border: 2px solid #4b9fd5;
        border-radius: 50%;
        animation: spin .75s linear infinite;
    }

    .btn {
        display: inline-block;
        margin-bottom: 0;
        font-weight: 400;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        background-image: none;
        border: 1px solid transparent;
        padding: 6px 12px;
        font-size: 14px;
        line-height: 1.42857143;
        border-radius: 4px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .btn-primary {
        color: #fff;
        background-color: #337ab7;
        border-color: #2e6da4;
    }

    .table {
        margin-bottom: 0.1rem;
    }

    .table-light, .table-light > td, .table-light > th {
        background-color: #FDFEB0;
    }

    th.centeraligned, td.centeraligned {
        text-align: center;
        font-weight: bold;
    }

    /*.table > caption + thead > tr:first-child > th, .table > colgroup + thead > tr:first-child > th, .table > thead:first-child > tr:first-child > th, .table > caption + thead > tr:first-child > td, .table > colgroup + thead > tr:first-child > td, .table > thead:first-child > tr:first-child > td {
        border: 1px solid #000;
    }

    .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th, .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {
        border: 1px solid #000;
    }*/
    .aligncenter {
        text-align: center;
    }
</style>

<script type="text/javascript">
    var Issues = {
        BUG: "Bug",
        VULNERABILITY: "Vulnerability",
        CODE_SMELL: "Code Smell",
        SECURITY_HOTSPOT: "Security Hotspot"
    };

    var Severities = {
        BLOCKER: "Blocker",
        MINOR: "Minor",
        CRITICAL: "Critical",
        INFO: "Info",
        MAJOR: "Major"
    };

    $(document).ready(function () {
        $(".container.body-content").height($(document).height());
        $('#SonarWarningsGrid').hide();
        $('#loader').hide();
        $.each(Issues, function (val, text) {
            $('#issuetypes').append($('<option></option>').val(val).html(text))
        });
        $("#issuetypes").prepend("<option value='-1'>Select Issue Type</option>");

        $.each(Severities, function (val, text) {
            $('#severities').append($('<option></option>').val(val).html(text))
        });
        $("#severities").prepend("<option value='-1'>ALL</option>");
        $("#severities").prepend("<option value='-2'>Select Severity</option>");

        $('#issuetypes option[value="-1"]').attr("selected", "selected");
        $('#severities option[value="-2"]').attr("selected", "selected");

        $.ajax({
            url: "/Common/Favourites",
            type: "GET",
            contentType: "application/json; charset=utf-8",
            datatype: JSON,
            success: function (result) {
                favorites = $.parseJSON(result);
                total = $.parseJSON(result).paging.total;
                ////console.log(total);
                if (total > 0) {

                    $(SortByKeyAsc(favorites.favorites, "name")).each(function () {
                        $("#favorites").append($("<option></option>").val(this.key).html(this.name));
                        $('.dropdown-menu').append('<li><a href="#">"' + this.name + '"</a></li>');
                        ////console.log(this.name);
                    });

                    ////$(favorites.favorites).each(function () {
                    ////    $("#favorites").append($("<option></option>").val(this.key).html(this.name));
                    ////    $('.dropdown-menu').append('<li><a href="#">"' + this.name + '"</a></li>');
                    ////    console.log(this.name);
                    ////});

                    $("#favorites").prepend("<option value='-1'>Select Project (Total : " + total + ")</option>");
                    $('#favorites option[value="-1"]').attr("selected", "selected");
                }
                else {
                    alert('Please mark at least one project as a favorite.');
                }
            },
            error: function (data) { }
        });
    });

    $(function () {
        $("#issuetypes").change(function () {
            $("#severities").empty();
            $.each(Severities, function (val, text) {
                $('#severities').append($('<option></option>').val(val).html(text))
            });
            $("#severities").prepend("<option value='-1'>ALL</option>");
            $("#severities").prepend("<option value='-2'>Select Severity</option>");
            $('#severities option[value="-2"]').attr("selected", "selected");

            if ($(this).val() == "SECURITY_HOTSPOT") {
                $("#severities").prop("disabled", true);
            }
            else {
                $("#severities").prop("disabled", false);
            }
        });
    });

    function BindGrid(res) {
        $('#SonarWarningsGrid').DataTable({
            data: res,
            autoWidth: false,
            columnDefs: [
                { width: '50px', targets: 0 },
                { width: '390px', targets: 1 },
                { width: '50px', targets: 2 },
                { width: '50px', targets: 3 },
                { width: '400px', targets: 4 },
                { width: '30px', targets: 5 },
                { width: '30px', targets: 6 },
                { width: '50px', targets: 7 },
                { width: '50px', targets: 8 },
                { width: '50px', targets: 9 }
            ],
            "columns": [
                { "data": "Rule" },
                { "data": "Severity" },
                { "data": "Component" },
                { "data": "Status" },
                { "data": "Message" },
                { "data": "Effort" },
                //{ "data": "Type" },
                { "data": "Line" },
                { "data": "Resolution" },
                { "data": "CreationDate" },
                { "data": "ClosedDate" },
            ],
            "bDestroy": true
        });
    }

    function Get() {
        if ($("#favorites option:selected").text().includes("Select Project")) {
            alert('Please select one of the project assigned to you.');
        }
        else if ($("#issuetypes option:selected").text() == 'Select Issue Type') {
            alert('Please select one of the issue type.');
        }
        else if ($("#issuetypes option:selected").text() != 'Security Hotspot' && $("#severities option:selected").text() == 'Select Severity') {
            alert('Please select one of the severity type.');
        }
        else {
            $('#loader').show();
            $.ajax({
                url: "/Warnings/SonarWarnings",
                type: "GET",
                contentType: "application/json; charset=utf-8",
                data: { projectName: $("#favorites option:selected").text(), issueType: $("#issuetypes option:selected").val(), severity: $("#severities option:selected").val(), newcodewarnings: $("#chknew")[0].checked },
                datatype: "json",
                success: function (res) {
                    $('#loader').hide();
                    BindGrid(res);
                    $('#SonarWarningsGrid').show();
                    $(".container.body-content").height($(document).height());
                },
                error: function (res) {
                    console.log(res);
                }
            });
        }
    }

    function ExportExcel() {
        $("#export").attr('disabled', true);
        $.ajax({
            type: "GET",
            contentType: "application/json; charset=utf-8",
            url: '/Warnings/ExportWarnings',
            data: { projectName: $("#favorites option:selected").text(), issueType: $("#issuetypes option:selected").val(), severity: $("#severities option:selected").val(), newcodewarnings: $("#chknew")[0].checked },
            success: function (response) {
                $("#export").attr('disabled', false);
                var blob = new Blob([response], { type: 'application/ms-excel' });
                var downloadUrl = URL.createObjectURL(blob);
                var a = document.createElement("a");
                a.href = downloadUrl;
                a.download = "SonarWarnings.xls";
                document.body.appendChild(a);
                a.click();
            }
        });
        return false;
    }

    function SortByKeyAsc(array, key) {
        return array.sort(function (a, b) {
            var x = a[key].toLowerCase(); var y = b[key].toLowerCase();
            return ((x < y) ? -1 : ((x > y) ? 1 : 0));
        });
    }
</script>

<table class="table table-bordered table-striped">
    <thead class="table-light">
        <tr>
            <th class="centeraligned" style="width:54%">Projects</th>
            <th class="centeraligned" style="width:15%">Issue Type</th>
            <th class="centeraligned" style="width:15%">Severity</th>
            <th class="centeraligned" style="width:16%">Actions</th>
    </thead>
    <tbody>
        <tr>
            <td>@Html.DropDownList("favorites", new SelectList(Enumerable.Empty<SelectListItem>()), new { @class = "form-control" })</td>
            <td>@Html.DropDownList("issuetypes", new SelectList(Enumerable.Empty<SelectListItem>()), new { @class = "form-control" })</td>
            <td>@Html.DropDownList("severities", new SelectList(Enumerable.Empty<SelectListItem>()), new { @class = "form-control" })</td>
            <td>
                <button id="getIssues" type="submit" onclick="Get()" class="btn btn-primary">Get Issues</button>
                <button id="export" type="submit" onclick="ExportExcel()" class="btn btn-primary">Export</button>
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" id="chknew">
                    <label class="form-check-label" for="chknew">Only New Warnings</label>
                </div>
            </td>
        </tr>
    </tbody>
</table>
<div class="row">
    &nbsp;
</div>
<div class="row">
    <div class="container">
        <div class="row">
            <div class="col-md-5">
            </div>
            <div class="col-md-2 aligncenter">
                <div id="loader" class="spinner-border text-primary"></div>
            </div>
            <div class="col-md-5">
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <table id="SonarWarningsGrid" class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>Rule</th>
                            <th>Severity</th>
                            <th>Component</th>
                            <th>Status</th>
                            <th>Message</th>
                            <th>Effort</th>
                            @*<th>Type</th>*@
                            <th>Line</th>
                            <th>Resolution</th>
                            <th>Creation Date</th>
                            <th>Closed Date</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>